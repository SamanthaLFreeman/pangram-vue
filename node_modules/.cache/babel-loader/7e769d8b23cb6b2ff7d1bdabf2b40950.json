{"remainingRequest":"/Users/samanthafreeman/Jobs/pangram-vue/node_modules/babel-loader/lib/index.js!/Users/samanthafreeman/Jobs/pangram-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/samanthafreeman/Jobs/pangram-vue/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/samanthafreeman/Jobs/pangram-vue/src/components/Pangram.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/samanthafreeman/Jobs/pangram-vue/src/components/Pangram.vue","mtime":1629748839388},{"path":"/Users/samanthafreeman/Jobs/pangram-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/samanthafreeman/Jobs/pangram-vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/samanthafreeman/Jobs/pangram-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/samanthafreeman/Jobs/pangram-vue/node_modules/vue-loader-v16/dist/index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gaW1wb3J0IFZ1ZSBmcm9tICJ2dWUiOwovLyBpbXBvcnQgcmVtb3ZlIGZyb20gImxvZGFzaC9yZW1vdmUiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogInBhbmdyYW0iLAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaXNTdWJtaXR0ZWQ6IGZhbHNlLAogICAgICBmb3JtOiB7CiAgICAgICAgcGFuZ3JhbTogIiIKICAgICAgfQogICAgfTsKICB9LAoKICBtZXRob2RzOiB7CiAgICBpc1BhbmdyYW0oc2VudGVuY2UpIHsKICAgICAgdGhpcy5pc1N1Ym1pdHRlZCA9IHRydWU7CiAgICAgIGNvbnNvbGUubG9nKCdzZW50ZW5jZScsIHNlbnRlbmNlKTsKICAgIH0KCiAgfQp9Ow=="},{"version":3,"sources":["/Users/samanthafreeman/Jobs/pangram-vue/src/components/Pangram.vue"],"names":[],"mappings":"AAgCA;AACA;AAEA,eAAe;AACb,EAAA,IAAI,EAAE,SADO;;AAEb,EAAA,IAAI,GAAG;AACL,WAAO;AACL,MAAA,WAAW,EAAE,KADR;AAEL,MAAA,IAAG,EAAI;AACL,QAAA,OAAO,EAAE;AADJ;AAFF,KAAP;AAMD,GATY;;AAUb,EAAA,OAAO,EAAE;AACP,IAAA,SAAS,CAAC,QAAD,EAAW;AAClB,WAAK,WAAL,GAAmB,IAAnB;AACA,MAAA,OAAO,CAAC,GAAR,CAAY,UAAZ,EAAwB,QAAxB;AACF;;AAJO;AAVI,CAAf","sourcesContent":["<template>\n  <div class=\"app-form\">\n    <section class=\"form\">\n      <div class=\"field\">\n        \n        <p>Pangrams are sentences which use every single letter of the alphabet. ex: “A quick brown fox jumps over the lazy dog.”</p>\n        <p>Please fork this project and write a function which determines if the input is a pangram or not. If the input is a pangram return \"Pangram!\" If it is not, \n        please return the letters of the alphabet that are missing from the sentance. The sentence may include upper or lowercase letters or special characters\n        but the returned letters should all be lowercase with special characters ommitted. You may use any libraries or tools at your disposal to help complete this project.\n        Please also include responsive css styles on this page (this paragraph included) and the output as well, the design is up to you (be creative if you like!). Bonus points for validation and including accessibility.</p>\n\n        <p> Vue.js documentation can be found here: <a href=\"https://vuejs.org/\">Vue documentation</a>\n        </p>\n        <div v-if=\"isSubmitted === false\">\n          <div class=\"\">\n            <label class=\"label\">Pangram</label>\n            <input v-model=\"form.pangram\" class=\"input\" type=\"text\" placeholder=\"Add Sentence here...\">\n          </div>\n        </div>\n         <div v-if=\"isSubmitted === true\">\n           {{ isPangram(form.pangram) }}\n         </div>\n      </div>\n  \n      <button v-on:click=\"isPangram(form.pangram)\" type=\"submit\">\n        <span>submit</span> \n      </button>\n    </section>\n  </div>\n</template>\n\n<script>\n// import Vue from \"vue\";\n// import remove from \"lodash/remove\";\n\nexport default {\n  name: \"pangram\",\n  data() {\n    return {\n      isSubmitted: false,\n      form : {\n        pangram: \"\",\n      }\n    } \n  },\n  methods: {\n    isPangram(sentence) {\n      this.isSubmitted = true;\n      console.log('sentence', sentence);\n    }\n  } \n};\n\n</script>\n\n<style scoped lang=\"scss\">\n\n</style>"],"sourceRoot":""}]}